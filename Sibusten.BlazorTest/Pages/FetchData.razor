@page "/fetchdata"
@inject HttpClient Http

<Heading Size="HeadingSize.Is1">
    Weather forecast
</Heading>

<Paragraph>
    This component demonstrates fetching data from the server.
</Paragraph>

@if (forecasts == null)
{
    <Paragraph Italic="true">
        Loading...
    </Paragraph>
}
else
{
    <Table>
        <TableHeader>
            <TableRow>
                <TableHeaderCell>
                    Date
                </TableHeaderCell>
                <TableHeaderCell>
                    Temp. (C)
                </TableHeaderCell>
                <TableHeaderCell>
                    Temp. (F)
                </TableHeaderCell>
                <TableHeaderCell>
                    Summary
                </TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            @foreach (var forecast in forecasts)
            {
                <TableRow>
                    <TableRowCell>
                        @forecast.Date.ToShortDateString()
                    </TableRowCell>
                    <TableRowCell>
                        @forecast.TemperatureC
                    </TableRowCell>
                    <TableRowCell>
                        @forecast.TemperatureF
                    </TableRowCell>
                    <TableRowCell>
                        @forecast.Summary
                    </TableRowCell>
                </TableRow>
            }
        </TableBody>
    </Table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
